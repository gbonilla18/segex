*) rename table "microarray" to "response" (don't rush with this)

*) Write tests

*) Installation: automate file copying: have user provide only two directories:
CGI_ROOT and DOCUMENTS_ROOT. Create the subtree containing css/, images/, and
js/ directories under DOCUMENTS_ROOT and the subtree corresponding to cgi-bin
under CGI_ROOT.

*) Consider using YUI tooltip control to make forms (e.g. Find Probes, Compare
Experiments) more user-friendly.
http://developer.yahoo.com/yui/examples/container/tooltip.html

*) Raphael is now a plugin for YUI 3: http://yuilibrary.com/gallery/show/raphael
This is very exciting. Investigate (1) whether changing over to YUI 3 is
feasible (seems like it should be!) and (2) whether Raphael can be used for easy
graphing (will probably have to write own Javascript graphing module).

*) Venn diagrams could be plotted using Raphael. What is needed: optimization
algorithm (implemented in Javascript) for 3-cirlcle diagrams, and something to
show text labels (i.e. how many probes are significant). If done, place
resulting code on Github.

*) Instead of scattering calls to File::Temp throughout the application,
consider centralizing temporary directory info in Config.pm either by relying on
prefix from File::Temp or some other way.

*) Eventually, we need at least two types of database users: segex_basic and
segex_user. segex_user is granted UPDATE, INSERT, DELETE, and CREATE TEMPOARY
privileges, while segex_basic is only granted SELECT.

*) When comparing experiments 60-64 (Mouse Agilent 44K_v1) and filtering on gene
prefix Kcne, the filter probe list (hidden field) becomes very long. This is (a)
inefficient, (b) prevents us from using RESTful queries for getTFS slices. Need
to have code that "knows" the shortest way to request the necessary information
from getTFS. It should "remember" that user queried for Kcne prefix and use that
query if probe list is too long (longer than original query).

*) For Manage Studies, use YUI buttons for switching between forms for (a)
editing study fields, (b) assigning existing experiment, (c) adding new
experiment.

*) Consider using a Tree View instead of multiple levels of dropdown boxes. YUI
has a Tree View control available. Doing so would make sense -- consider the
following hierarchy:
	species -> platform -> study -> experiment
It's four levels deep!

*) Implement breadcrumbs.
